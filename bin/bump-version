#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

PROGRAM="$(basename "${0}")"
VERBOSE=

set +u
. "$(git --exec-path)/git-sh-setup"
set -u

die() {
  printf '%s: %s\n' "${PROGRAM}" "${@}" >&2
  exit 1
}

info() {
  [[ -z $VERBOSE ]] || printf '==> %s\n' "${@}"
}


usage() {
  cat<<EOF
usage: ${PROGRAM} [-h] [-d <date>] <version>

  * Updates package version in README and package preamble.
  * Sets the LaTeX package date.
  * Creates annotated tag.

Options:

  -d  Provide an alternative release date [default: today]
  -h  Show this message and exit
  -n  Do not make changes (useful with -v)
  -v  Enable verbose output
EOF
}


main() {
  require_clean_work_tree 'bump version' 'Please commit or stash them.'

  local current_date current_version new_version

  local dry_run=
  local new_date=

  while getopts 'd:hnv' opt; do
    case $opt in
      d)
        new_date="$(date -u -d "${OPTARG}" +'%Y/%m/%d')"
        ;;
      h)
        usage
        return
        ;;
      n)
        dry_run=1
        ;;
      v)
        VERBOSE=1
        ;;
      *)
        usage
        return 1
        ;;
    esac
  done

  shift $((OPTIND - 1))

  new_version="${1:-}"
  [[ -z "${new_version}" ]] && { usage; return 1; }
  if ! [[ $new_version =~ [0-9]+\.[0-9]+\.[0-9]+ ]]; then
    die 'version must be MAJOR.MINOR.PATCH'
  fi

  [[ -z "${new_date}" ]] && new_date="$(date -u +'%Y/%m/%d')"

  # Extract date and version from release info.
  release_info="$(awk -F[][] '/ProvidesPackage/ { print $2 }' dnd.sty)"
  current_date="$(awk '{ print $1 }' <<< "${release_info}")"
  current_version="$(awk '{ print $2 }' <<< "${release_info}" | tr -d 'v')"

  info "current date: ${current_date}"
  info "current version: ${current_version}"
  info "new date: ${new_date}"
  info "new version: ${new_version}"

  if [[ -z $dry_run ]]; then
    sed -e '/ProvidesPackage/ s#'"${current_date}"'#'"${new_date}"'#' \
        -e '/ProvidesPackage/ s#'"v${current_version}"'#'"v${new_version}"'#' \
        -i dnd.sty
    sed 's/'"${current_version}"'/'"${new_version}"'/g' -i README.md

    git add README.md dnd.sty
    git commit -m "Release version ${new_version}"
    git tag -a -m "Version ${new_version}" "v${new_version}" HEAD
  fi
}


main "${@}"
